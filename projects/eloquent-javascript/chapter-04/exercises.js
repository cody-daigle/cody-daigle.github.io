////////////////////////////////////////////////////////////////////////////////
// range ///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function range(start, end, step){
  let output = [];
  if(step === undefined){// || step === 0
    if(start < end){
    for(let i = start; i <= end; i++){
      output.push(i)
      }
    }else{
      for(let i = start; i >= end; i--){
        output.push(i)
      }
    }
  }else{
    if(step < 0){
      for(let i = start; i >= end; i += step){
        output.push(i);
      }
    }else{
      for(let i = start; i <= end; i += step){
        output.push(i);
      }
    }
  }
  return output;
}



// function range(start, end, step=1){
//   let output = [];
//   if (step < 0){
//     for(let i = start; i >= end; i += step){
//   output.push(i);
//     }
//   }else if(step > 0){
//     for(let i = start; i <= end; i += step){
//     output.push(i);
//     }
//   }else{
//     for(let i = start; i <= end; i++){
//       output.push(i);
//     }
//   }
//   return output;
// }


////////////////////////////////////////////////////////////////////////////////
// sum /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function sum(array) {
return array.reduce((acc, curr) =>{
  acc += curr
  return acc
}, 0)
}

////////////////////////////////////////////////////////////////////////////////
// reverseArray ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArray(array) {
  let output = [];
  for(let i = array.length - 1; i >= 0 ; i--){
    output.push(array[i])
  }
  return output;
//return array.reverse();
}

////////////////////////////////////////////////////////////////////////////////
// reverseArrayInPlace /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArrayInPlace(array) {
  return array.reverse();
}

////////////////////////////////////////////////////////////////////////////////
// arrayToList /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function arrayToList(array) {
  let rest = null;
  for(let i = array.length - 1; i >= 0; i--){
    rest = {value: array[i], rest: rest};
  }
  return rest;
}

////////////////////////////////////////////////////////////////////////////////
// listToArray /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function listToArray(list, array=[]) {
//base
if(list.rest === null){
  array.push(list.value);
  return array;
}
//recursion
array.push(list.value);
return listToArray(list.rest, array)
}

////////////////////////////////////////////////////////////////////////////////
// prepend /////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function prepend(value, list) {
return { value, rest: list};
}

////////////////////////////////////////////////////////////////////////////////
// nth /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function nth(list, n) {
  //base
  if (!list){
    return undefined;
  }
    //recursion
  if(n === 0){
    return list.value;
  }
    return nth(list.rest, n - 1);
}

////////////////////////////////////////////////////////////////////////////////
// deepEqual ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function deepEqual() {
//go over in class. Nightmare
}

////////////////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    range,
    sum,
    reverseArray,
    reverseArrayInPlace,
    arrayToList,
    listToArray,
    prepend,
    nth,
    deepEqual,
  };
};
